package com.staygrateful.todolistapp.data.model

import android.os.Parcelable
import androidx.room.Entity
import androidx.room.Ignore
import androidx.room.PrimaryKey
import com.staygrateful.todolistapp.external.extension.getFormattedDate
import kotlinx.parcelize.IgnoredOnParcel
import kotlinx.parcelize.Parcelize

/**
 * Data class representing a task.
 *
 * This data class represents a task entity with properties such as title, description, due date, and completion status.
 *
 * @param id The unique identifier of the task (auto-generated by Room).
 * @param title The title of the task.
 * @param description The description of the task.
 * @param dueDate The due date of the task in milliseconds.
 * @param isCompleted A flag indicating whether the task is completed or not.
 */
@Entity(tableName = "tasks")
@Parcelize
data class Task(
    @PrimaryKey(autoGenerate = true)
    val id: Long = 0L,
    var title: String,
    var description: String,
    var dueDate: Long,
    var isCompleted: Boolean = false
) : Parcelable {

    // Property indicating whether the task has a valid ID (greater than 0)
    val hasId: Boolean get() = id > 0

    // Transient property for storing formatted due date (not persisted in the database)
    @Ignore
    @IgnoredOnParcel
    var formattedDueDate: String? = null
        get() {
            if (field.isNullOrEmpty()) {
                field = dueDate.getFormattedDate()
            }
            return field
        }

    // Companion object with constant key and a factory method for creating a new instance
    companion object {
        const val KEY = "key_task"

        /**
         * Factory method to create a new task instance.
         *
         * This method creates a new task instance with default values.
         *
         * @return A new instance of Task.
         */
        fun newInstance(): Task = Task(0L, "", "", System.currentTimeMillis())
    }
}
